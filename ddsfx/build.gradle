def fxPlatform = osdetector.os == 'osx' ? osdetector.arch == 'aarch_64' ? 'mac-aarch64' : 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os == 'linux' ? osdetector.arch == 'aarch_64' ? 'linux-aarch64' : 'linux' : osdetector.os

dependencies {
    api project(':ddsiio')
    api "org.openjfx:javafx-base:19:${fxPlatform}"
    api "org.openjfx:javafx-graphics:19:${fxPlatform}"
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

tasks.withType(JavaCompile) {
    moduleOptions {
        addExports = [
                'javafx.graphics/com.sun.javafx.iio'       : 'io.github.ititus.ddsfx',
                'javafx.graphics/com.sun.javafx.iio.common': 'io.github.ititus.ddsfx'
        ]
    }
}

tasks.withType(Javadoc) {
    moduleOptions {
        addExports = [
                'javafx.graphics/com.sun.javafx.iio'       : 'io.github.ititus.ddsfx',
                'javafx.graphics/com.sun.javafx.iio.common': 'io.github.ititus.ddsfx'
        ]
    }
}

tasks.withType(Test) {
    moduleOptions {
        addExports = [
                'javafx.graphics/com.sun.javafx.iio'       : 'io.github.ititus.ddsfx',
                'javafx.graphics/com.sun.javafx.iio.common': 'io.github.ititus.ddsfx'
        ]
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            pom {
                name = 'DDS FX Reader'
                packaging = 'jar'
                description = 'DDS Image Library for JavaFX'
                url = 'https://github.com/iTitus/dds'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id = 'iTitus'
                        name = 'iTitus'
                        email = 'ititus@users.noreply.github.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/iTitus/dds.git'
                    developerConnection = 'scm:git:ssh://git@github.com:iTitus/dds.git'
                    url = 'https://github.com/iTitus/dds'
                    tag = "v${version}"
                }

                // Remove classifier for JavaFX dependencies
                withXml {
                    Node pomNode = asNode()
                    pomNode.dependencies.'*'.findAll() {
                        it.groupId.text() == 'org.openjfx'
                    }.each {
                        it.remove(it.classifier)
                    }
                }
            }

            from components.java
        }
    }
}

signing {
    def signingKey = findProperty('signing_key')
    def signingPassword = findProperty('signing_password')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.MyPublication
}
