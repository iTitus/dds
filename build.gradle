plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'org.openjfx.javafxplugin' version '0.1.0' apply false
    id 'org.javamodularity.moduleplugin' version '1.8.15' apply false
}

nexusPublishing {
    connectTimeout = clientTimeout = Duration.ofHours(2)
    repositories {
        sonatype {
            stagingProfileId = project.findProperty('ossrh_staging_profile_id')
            username = project.findProperty('ossrh_username')
            password = project.findProperty('ossrh_password')
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'java-library-distribution'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'org.javamodularity.moduleplugin'

    group = 'io.github.ititus'
    version = '3.1.0'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }

        withSourcesJar()
        withJavadocJar()
    }

    modularity {
        improveEclipseClasspathFile()
        // disableEffectiveArgumentsAdjustment()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        systemProperty 'file.encoding', 'UTF-8'
    }

    javadoc {
        options {
            // silence warnings on missing javadoc
            addBooleanOption('Xdoclint:all,-missing', true)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation platform('org.junit:junit-bom:5.11.4')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.assertj:assertj-core:3.27.3'
        testImplementation 'org.mockito:mockito-core:5.15.2'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'PASSED', 'FAILED', 'SKIPPED'
        }
    }
}
